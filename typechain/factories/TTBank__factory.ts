/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TTBank, TTBankInterface } from "../TTBank";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "accountNumber",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "accountName",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "AccountOpened",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "bankBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "openAccount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract Token",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "viewAccount",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "accountNumber",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "accountName",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
        ],
        internalType: "struct TTBank.BankDetails",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611751806100206000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80638da5cb5b116100665780638da5cb5b146100fa578063b6b55f2514610118578063c4d66de814610134578063f2fde38b14610150578063fc0c546a1461016c57610093565b80631000420d1461009857806328657aa5146100b4578063715018a6146100d25780637f96939d146100dc575b600080fd5b6100b260048036038101906100ad9190610e00565b61018a565b005b6100bc61038e565b6040516100c99190610e3c565b60405180910390f35b6100da610440565b005b6100e46104c8565b6040516100f19190610ee9565b60405180910390f35b610102610589565b60405161010f9190610f13565b60405180910390f35b610132600480360381019061012d9190610e00565b6105b3565b005b61014e60048036038101906101499190610f5a565b6106a3565b005b61016a60048036038101906101659190610f5a565b6107d1565b005b6101746108c9565b6040516101819190610fe6565b60405180910390f35b80600081116101ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101c59061105e565b60405180910390fd5b606660000160008154809291906101e4906110ad565b919050555033606660010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550816066600201819055506066606960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015481600001556001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060028201548160020155905050610345333084606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108ef909392919063ffffffff16565b7f3dcb1c086601de03a591a96777a894297cadcf7af2b0416cceedff1ec49bc7c760666000015433606660020154604051610382939291906110f6565b60405180910390a15050565b6000606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016103eb9190610f13565b60206040518083038186803b15801561040357600080fd5b505afa158015610417573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043b9190611142565b905090565b610448610978565b73ffffffffffffffffffffffffffffffffffffffff16610466610589565b73ffffffffffffffffffffffffffffffffffffffff16146104bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b3906111bb565b60405180910390fd5b6104c66000610980565b565b6104d0610d8e565b606960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806060016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481525050905090565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b80600081116105f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ee9061105e565b60405180910390fd5b81606960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201600082825461064991906111db565b9250508190555061069f333084606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108ef909392919063ffffffff16565b5050565b600060019054906101000a900460ff166106cb5760008054906101000a900460ff16156106d4565b6106d3610a46565b5b610713576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070a906112a3565b60405180910390fd5b60008060019054906101000a900460ff161590508015610763576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b81606560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506107ac610a57565b80156107cd5760008060016101000a81548160ff0219169083151502179055505b5050565b6107d9610978565b73ffffffffffffffffffffffffffffffffffffffff166107f7610589565b73ffffffffffffffffffffffffffffffffffffffff161461084d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610844906111bb565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156108bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b490611335565b60405180910390fd5b6108c681610980565b50565b606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610972846323b872dd60e01b85858560405160240161091093929190611355565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610ab0565b50505050565b600033905090565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000610a5130610b77565b15905090565b600060019054906101000a900460ff16610aa6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9d906113fe565b60405180910390fd5b610aae610b9a565b565b6000610b12826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610bfb9092919063ffffffff16565b9050600081511115610b725780806020019051810190610b329190611456565b610b71576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b68906114f5565b60405180910390fd5b5b505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600060019054906101000a900460ff16610be9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610be0906113fe565b60405180910390fd5b610bf9610bf4610978565b610980565b565b6060610c0a8484600085610c13565b90509392505050565b606082471015610c58576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c4f90611587565b60405180910390fd5b610c6185610b77565b610ca0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c97906115f3565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610cc9919061168d565b60006040518083038185875af1925050503d8060008114610d06576040519150601f19603f3d011682016040523d82523d6000602084013e610d0b565b606091505b5091509150610d1b828286610d27565b92505050949350505050565b60608315610d3757829050610d87565b600083511115610d4a5782518084602001fd5b816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d7e91906116f9565b60405180910390fd5b9392505050565b604051806060016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b600080fd5b6000819050919050565b610ddd81610dca565b8114610de857600080fd5b50565b600081359050610dfa81610dd4565b92915050565b600060208284031215610e1657610e15610dc5565b5b6000610e2484828501610deb565b91505092915050565b610e3681610dca565b82525050565b6000602082019050610e516000830184610e2d565b92915050565b610e6081610dca565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e9182610e66565b9050919050565b610ea181610e86565b82525050565b606082016000820151610ebd6000850182610e57565b506020820151610ed06020850182610e98565b506040820151610ee36040850182610e57565b50505050565b6000606082019050610efe6000830184610ea7565b92915050565b610f0d81610e86565b82525050565b6000602082019050610f286000830184610f04565b92915050565b610f3781610e86565b8114610f4257600080fd5b50565b600081359050610f5481610f2e565b92915050565b600060208284031215610f7057610f6f610dc5565b5b6000610f7e84828501610f45565b91505092915050565b6000819050919050565b6000610fac610fa7610fa284610e66565b610f87565b610e66565b9050919050565b6000610fbe82610f91565b9050919050565b6000610fd082610fb3565b9050919050565b610fe081610fc5565b82525050565b6000602082019050610ffb6000830184610fd7565b92915050565b600082825260208201905092915050565b7f545442616e6b3a204465706f73697420616d6f756e7420697320300000000000600082015250565b6000611048601b83611001565b915061105382611012565b602082019050919050565b600060208201905081810360008301526110778161103b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006110b882610dca565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156110eb576110ea61107e565b5b600182019050919050565b600060608201905061110b6000830186610e2d565b6111186020830185610f04565b6111256040830184610e2d565b949350505050565b60008151905061113c81610dd4565b92915050565b60006020828403121561115857611157610dc5565b5b60006111668482850161112d565b91505092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006111a5602083611001565b91506111b08261116f565b602082019050919050565b600060208201905081810360008301526111d481611198565b9050919050565b60006111e682610dca565b91506111f183610dca565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156112265761122561107e565b5b828201905092915050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b600061128d602e83611001565b915061129882611231565b604082019050919050565b600060208201905081810360008301526112bc81611280565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061131f602683611001565b915061132a826112c3565b604082019050919050565b6000602082019050818103600083015261134e81611312565b9050919050565b600060608201905061136a6000830186610f04565b6113776020830185610f04565b6113846040830184610e2d565b949350505050565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b60006113e8602b83611001565b91506113f38261138c565b604082019050919050565b60006020820190508181036000830152611417816113db565b9050919050565b60008115159050919050565b6114338161141e565b811461143e57600080fd5b50565b6000815190506114508161142a565b92915050565b60006020828403121561146c5761146b610dc5565b5b600061147a84828501611441565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b60006114df602a83611001565b91506114ea82611483565b604082019050919050565b6000602082019050818103600083015261150e816114d2565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b6000611571602683611001565b915061157c82611515565b604082019050919050565b600060208201905081810360008301526115a081611564565b9050919050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b60006115dd601d83611001565b91506115e8826115a7565b602082019050919050565b6000602082019050818103600083015261160c816115d0565b9050919050565b600081519050919050565b600081905092915050565b60005b8381101561164757808201518184015260208101905061162c565b83811115611656576000848401525b50505050565b600061166782611613565b611671818561161e565b9350611681818560208601611629565b80840191505092915050565b6000611699828461165c565b915081905092915050565b600081519050919050565b6000601f19601f8301169050919050565b60006116cb826116a4565b6116d58185611001565b93506116e5818560208601611629565b6116ee816116af565b840191505092915050565b6000602082019050818103600083015261171381846116c0565b90509291505056fea2646970667358221220ae7f34603b2b4d3cc6051516e5099e5b6ab20cd67b87bc63f0763a93a49fb82a64736f6c63430008090033";

export class TTBank__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TTBank> {
    return super.deploy(overrides || {}) as Promise<TTBank>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TTBank {
    return super.attach(address) as TTBank;
  }
  connect(signer: Signer): TTBank__factory {
    return super.connect(signer) as TTBank__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TTBankInterface {
    return new utils.Interface(_abi) as TTBankInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): TTBank {
    return new Contract(address, _abi, signerOrProvider) as TTBank;
  }
}
