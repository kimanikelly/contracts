/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TTBank, TTBankInterface } from "../TTBank";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "checkingAccounts",
    outputs: [
      {
        internalType: "uint256",
        name: "accountNumber",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "accountName",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "accountType",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_accountType",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_balance",
        type: "uint256",
      },
    ],
    name: "openAccount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "savingsAccounts",
    outputs: [
      {
        internalType: "uint256",
        name: "accountNumber",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "accountName",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "accountType",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract Token",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061121d806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063c4d66de81161005b578063c4d66de814610104578063dcc15b6214610120578063f2fde38b14610153578063fc0c546a1461016f57610088565b8063715018a61461008d5780638da5cb5b146100975780639e38eab4146100b5578063ab9fa480146100d1575b600080fd5b61009561018d565b005b61009f610215565b6040516100ac9190610b5a565b60405180910390f35b6100cf60048036038101906100ca9190610be6565b61023f565b005b6100eb60048036038101906100e69190610c52565b610671565b6040516100fb9493929190610c9d565b60405180910390f35b61011e60048036038101906101199190610c52565b6106c1565b005b61013a60048036038101906101359190610c52565b6107ef565b60405161014a9493929190610c9d565b60405180910390f35b61016d60048036038101906101689190610c52565b61083f565b005b610177610937565b6040516101849190610d41565b60405180910390f35b61019561095d565b73ffffffffffffffffffffffffffffffffffffffff166101b3610215565b73ffffffffffffffffffffffffffffffffffffffff1614610209576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161020090610db9565b60405180910390fd5b6102136000610965565b565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f436865636b696e6700000000000000000000000000000000000000000000000082148061028c57507f536176696e67730000000000000000000000000000000000000000000000000082145b6102cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102c290610e25565b60405180910390fd5b6000811161030e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030590610e91565b60405180910390fd5b670de0b6b3a7640000816103229190610ee0565b9050606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161037f9190610b5a565b60206040518083038186803b15801561039757600080fd5b505afa1580156103ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103cf9190610f4f565b811115610411576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040890610fc8565b60405180910390fd5b6066600001600081548092919061042790610fe8565b919050555033606660010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081606660020181905550806066600301819055507f436865636b696e6700000000000000000000000000000000000000000000000082141561057a576066606a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015481600001556001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600282015481600201556003820154816003015590505061066d565b7f536176696e67730000000000000000000000000000000000000000000000000082141561066c576066606b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015481600001556001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060028201548160020155600382015481600301559050505b5b5050565b606a6020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030154905084565b600060019054906101000a900460ff166106e95760008054906101000a900460ff16156106f2565b6106f1610a2b565b5b610731576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610728906110a3565b60405180910390fd5b60008060019054906101000a900460ff161590508015610781576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b81606560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506107ca610a3c565b80156107eb5760008060016101000a81548160ff0219169083151502179055505b5050565b606b6020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030154905084565b61084761095d565b73ffffffffffffffffffffffffffffffffffffffff16610865610215565b73ffffffffffffffffffffffffffffffffffffffff16146108bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b290610db9565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561092b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092290611135565b60405180910390fd5b61093481610965565b50565b606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600033905090565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000610a3630610a95565b15905090565b600060019054906101000a900460ff16610a8b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a82906111c7565b60405180910390fd5b610a93610ab8565b565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600060019054906101000a900460ff16610b07576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610afe906111c7565b60405180910390fd5b610b17610b1261095d565b610965565b565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b4482610b19565b9050919050565b610b5481610b39565b82525050565b6000602082019050610b6f6000830184610b4b565b92915050565b600080fd5b6000819050919050565b610b8d81610b7a565b8114610b9857600080fd5b50565b600081359050610baa81610b84565b92915050565b6000819050919050565b610bc381610bb0565b8114610bce57600080fd5b50565b600081359050610be081610bba565b92915050565b60008060408385031215610bfd57610bfc610b75565b5b6000610c0b85828601610b9b565b9250506020610c1c85828601610bd1565b9150509250929050565b610c2f81610b39565b8114610c3a57600080fd5b50565b600081359050610c4c81610c26565b92915050565b600060208284031215610c6857610c67610b75565b5b6000610c7684828501610c3d565b91505092915050565b610c8881610bb0565b82525050565b610c9781610b7a565b82525050565b6000608082019050610cb26000830187610c7f565b610cbf6020830186610b4b565b610ccc6040830185610c8e565b610cd96060830184610c7f565b95945050505050565b6000819050919050565b6000610d07610d02610cfd84610b19565b610ce2565b610b19565b9050919050565b6000610d1982610cec565b9050919050565b6000610d2b82610d0e565b9050919050565b610d3b81610d20565b82525050565b6000602082019050610d566000830184610d32565b92915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610da3602083610d5c565b9150610dae82610d6d565b602082019050919050565b60006020820190508181036000830152610dd281610d96565b9050919050565b7f545442616e6b3a20496e76616c6964206163636f756e74207479706500000000600082015250565b6000610e0f601c83610d5c565b9150610e1a82610dd9565b602082019050919050565b60006020820190508181036000830152610e3e81610e02565b9050919050565b7f545442616e6b3a20000000000000000000000000000000000000000000000000600082015250565b6000610e7b600883610d5c565b9150610e8682610e45565b602082019050919050565b60006020820190508181036000830152610eaa81610e6e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610eeb82610bb0565b9150610ef683610bb0565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610f2f57610f2e610eb1565b5b828202905092915050565b600081519050610f4981610bba565b92915050565b600060208284031215610f6557610f64610b75565b5b6000610f7384828501610f3a565b91505092915050565b7f42616c616e6365206e6f74207269676874000000000000000000000000000000600082015250565b6000610fb2601183610d5c565b9150610fbd82610f7c565b602082019050919050565b60006020820190508181036000830152610fe181610fa5565b9050919050565b6000610ff382610bb0565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561102657611025610eb1565b5b600182019050919050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b600061108d602e83610d5c565b915061109882611031565b604082019050919050565b600060208201905081810360008301526110bc81611080565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061111f602683610d5c565b915061112a826110c3565b604082019050919050565b6000602082019050818103600083015261114e81611112565b9050919050565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b60006111b1602b83610d5c565b91506111bc82611155565b604082019050919050565b600060208201905081810360008301526111e0816111a4565b905091905056fea26469706673582212208161f8f79cc1512129c3db68dfc316ce3c1f795dcc076b68a91ba50269e8317264736f6c63430008090033";

export class TTBank__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TTBank> {
    return super.deploy(overrides || {}) as Promise<TTBank>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TTBank {
    return super.attach(address) as TTBank;
  }
  connect(signer: Signer): TTBank__factory {
    return super.connect(signer) as TTBank__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TTBankInterface {
    return new utils.Interface(_abi) as TTBankInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): TTBank {
    return new Contract(address, _abi, signerOrProvider) as TTBank;
  }
}
