/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TTBank, TTBankInterface } from "../TTBank";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_balance",
        type: "uint256",
      },
    ],
    name: "openAccount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract Token",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "viewAccount",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "accountNumber",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "accountName",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
        ],
        internalType: "struct TTBank.BankDetails",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506110e8806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063b6b55f251161005b578063b6b55f25146100ef578063c4d66de81461010b578063f2fde38b14610127578063fc0c546a1461014357610088565b80631000420d1461008d578063715018a6146100a95780637f96939d146100b35780638da5cb5b146100d1575b600080fd5b6100a760048036038101906100a29190610ac3565b610161565b005b6100b1610383565b005b6100bb61040b565b6040516100c89190610b82565b60405180910390f35b6100d96104cc565b6040516100e69190610bac565b60405180910390f35b61010960048036038101906101049190610ac3565b6104f6565b005b61012560048036038101906101209190610bf3565b610649565b005b610141600480360381019061013c9190610bf3565b610777565b005b61014b61086f565b6040516101589190610c7f565b60405180910390f35b80600081116101a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161019c90610cf7565b60405180910390fd5b606660000160008154809291906101bb90610d46565b919050555033606660010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550816066600201819055506066606960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015481600001556001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060028201548160020155905050606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161032c93929190610d9e565b602060405180830381600087803b15801561034657600080fd5b505af115801561035a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061037e9190610e0d565b505050565b61038b610895565b73ffffffffffffffffffffffffffffffffffffffff166103a96104cc565b73ffffffffffffffffffffffffffffffffffffffff16146103ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f690610e86565b60405180910390fd5b610409600061089d565b565b610413610a51565b606960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806060016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481525050905090565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b806000811161053a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053190610cf7565b60405180910390fd5b81606960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201600082825461058c9190610ea6565b92505081905550606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016105f293929190610d9e565b602060405180830381600087803b15801561060c57600080fd5b505af1158015610620573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106449190610e0d565b505050565b600060019054906101000a900460ff166106715760008054906101000a900460ff161561067a565b610679610963565b5b6106b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106b090610f6e565b60405180910390fd5b60008060019054906101000a900460ff161590508015610709576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b81606560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610752610974565b80156107735760008060016101000a81548160ff0219169083151502179055505b5050565b61077f610895565b73ffffffffffffffffffffffffffffffffffffffff1661079d6104cc565b73ffffffffffffffffffffffffffffffffffffffff16146107f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ea90610e86565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610863576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085a90611000565b60405180910390fd5b61086c8161089d565b50565b606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600033905090565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600061096e306109cd565b15905090565b600060019054906101000a900460ff166109c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ba90611092565b60405180910390fd5b6109cb6109f0565b565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600060019054906101000a900460ff16610a3f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3690611092565b60405180910390fd5b610a4f610a4a610895565b61089d565b565b604051806060016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b600080fd5b6000819050919050565b610aa081610a8d565b8114610aab57600080fd5b50565b600081359050610abd81610a97565b92915050565b600060208284031215610ad957610ad8610a88565b5b6000610ae784828501610aae565b91505092915050565b610af981610a8d565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b2a82610aff565b9050919050565b610b3a81610b1f565b82525050565b606082016000820151610b566000850182610af0565b506020820151610b696020850182610b31565b506040820151610b7c6040850182610af0565b50505050565b6000606082019050610b976000830184610b40565b92915050565b610ba681610b1f565b82525050565b6000602082019050610bc16000830184610b9d565b92915050565b610bd081610b1f565b8114610bdb57600080fd5b50565b600081359050610bed81610bc7565b92915050565b600060208284031215610c0957610c08610a88565b5b6000610c1784828501610bde565b91505092915050565b6000819050919050565b6000610c45610c40610c3b84610aff565b610c20565b610aff565b9050919050565b6000610c5782610c2a565b9050919050565b6000610c6982610c4c565b9050919050565b610c7981610c5e565b82525050565b6000602082019050610c946000830184610c70565b92915050565b600082825260208201905092915050565b7f545442616e6b3a204465706f73697420616d6f756e7420697320300000000000600082015250565b6000610ce1601b83610c9a565b9150610cec82610cab565b602082019050919050565b60006020820190508181036000830152610d1081610cd4565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d5182610a8d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d8457610d83610d17565b5b600182019050919050565b610d9881610a8d565b82525050565b6000606082019050610db36000830186610b9d565b610dc06020830185610b9d565b610dcd6040830184610d8f565b949350505050565b60008115159050919050565b610dea81610dd5565b8114610df557600080fd5b50565b600081519050610e0781610de1565b92915050565b600060208284031215610e2357610e22610a88565b5b6000610e3184828501610df8565b91505092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610e70602083610c9a565b9150610e7b82610e3a565b602082019050919050565b60006020820190508181036000830152610e9f81610e63565b9050919050565b6000610eb182610a8d565b9150610ebc83610a8d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610ef157610ef0610d17565b5b828201905092915050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6000610f58602e83610c9a565b9150610f6382610efc565b604082019050919050565b60006020820190508181036000830152610f8781610f4b565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610fea602683610c9a565b9150610ff582610f8e565b604082019050919050565b6000602082019050818103600083015261101981610fdd565b9050919050565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b600061107c602b83610c9a565b915061108782611020565b604082019050919050565b600060208201905081810360008301526110ab8161106f565b905091905056fea2646970667358221220f18c237bdb57458987a0c652b35d328b9c47b486421cd3a87879773abc14d85b64736f6c63430008090033";

export class TTBank__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TTBank> {
    return super.deploy(overrides || {}) as Promise<TTBank>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TTBank {
    return super.attach(address) as TTBank;
  }
  connect(signer: Signer): TTBank__factory {
    return super.connect(signer) as TTBank__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TTBankInterface {
    return new utils.Interface(_abi) as TTBankInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): TTBank {
    return new Contract(address, _abi, signerOrProvider) as TTBank;
  }
}
