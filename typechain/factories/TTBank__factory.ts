/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TTBank, TTBankInterface } from "../TTBank";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "checkingAccounts",
    outputs: [
      {
        internalType: "uint256",
        name: "accountNumber",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "accountName",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "accountType",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_accountName",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_accountType",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_balance",
        type: "uint256",
      },
    ],
    name: "openAccount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "savingsAccounts",
    outputs: [
      {
        internalType: "uint256",
        name: "accountNumber",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "accountName",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "accountType",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract Token",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506110fd806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063c4d66de81161005b578063c4d66de814610104578063dcc15b6214610120578063f2fde38b14610153578063fc0c546a1461016f57610088565b806351147ca81461008d578063715018a6146100a95780638da5cb5b146100b3578063ab9fa480146100d1575b600080fd5b6100a760048036038101906100a29190610a57565b61018d565b005b6100b16104cc565b005b6100bb610554565b6040516100c89190610aeb565b60405180910390f35b6100eb60048036038101906100e69190610b32565b61057e565b6040516100fb9493929190610b7d565b60405180910390f35b61011e60048036038101906101199190610b32565b6105ae565b005b61013a60048036038101906101359190610b32565b6106dc565b60405161014a9493929190610b7d565b60405180910390f35b61016d60048036038101906101689190610b32565b61070c565b005b610177610804565b6040516101849190610c21565b60405180910390f35b7f436865636b696e670000000000000000000000000000000000000000000000008214806101da57507f536176696e67730000000000000000000000000000000000000000000000000082145b610219576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021090610c99565b60405180910390fd5b670de0b6b3a76400008161022d9190610ce8565b905060008111610272576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026990610d8e565b60405180910390fd5b606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016102cd9190610aeb565b60206040518083038186803b1580156102e557600080fd5b505afa1580156102f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031d9190610dc3565b81111561035f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035690610e3c565b60405180910390fd5b6066600001600081548092919061037590610e5c565b91905055508260666001018190555081606660020181905550806066600301819055507f436865636b696e67000000000000000000000000000000000000000000000000821415610431576066606a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015481600001556001820154816001015560028201548160020155600382015481600301559050506104c7565b7f536176696e6773000000000000000000000000000000000000000000000000008214156104c6576066606b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015481600001556001820154816001015560028201548160020155600382015481600301559050505b5b505050565b6104d461082a565b73ffffffffffffffffffffffffffffffffffffffff166104f2610554565b73ffffffffffffffffffffffffffffffffffffffff1614610548576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053f90610ef1565b60405180910390fd5b6105526000610832565b565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606a6020528060005260406000206000915090508060000154908060010154908060020154908060030154905084565b600060019054906101000a900460ff166105d65760008054906101000a900460ff16156105df565b6105de6108f8565b5b61061e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061590610f83565b60405180910390fd5b60008060019054906101000a900460ff16159050801561066e576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b81606560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506106b7610909565b80156106d85760008060016101000a81548160ff0219169083151502179055505b5050565b606b6020528060005260406000206000915090508060000154908060010154908060020154908060030154905084565b61071461082a565b73ffffffffffffffffffffffffffffffffffffffff16610732610554565b73ffffffffffffffffffffffffffffffffffffffff1614610788576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077f90610ef1565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156107f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ef90611015565b60405180910390fd5b61080181610832565b50565b606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600033905090565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600061090330610962565b15905090565b600060019054906101000a900460ff16610958576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094f906110a7565b60405180910390fd5b610960610985565b565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600060019054906101000a900460ff166109d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109cb906110a7565b60405180910390fd5b6109e46109df61082a565b610832565b565b600080fd5b6000819050919050565b6109fe816109eb565b8114610a0957600080fd5b50565b600081359050610a1b816109f5565b92915050565b6000819050919050565b610a3481610a21565b8114610a3f57600080fd5b50565b600081359050610a5181610a2b565b92915050565b600080600060608486031215610a7057610a6f6109e6565b5b6000610a7e86828701610a0c565b9350506020610a8f86828701610a0c565b9250506040610aa086828701610a42565b9150509250925092565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ad582610aaa565b9050919050565b610ae581610aca565b82525050565b6000602082019050610b006000830184610adc565b92915050565b610b0f81610aca565b8114610b1a57600080fd5b50565b600081359050610b2c81610b06565b92915050565b600060208284031215610b4857610b476109e6565b5b6000610b5684828501610b1d565b91505092915050565b610b6881610a21565b82525050565b610b77816109eb565b82525050565b6000608082019050610b926000830187610b5f565b610b9f6020830186610b6e565b610bac6040830185610b6e565b610bb96060830184610b5f565b95945050505050565b6000819050919050565b6000610be7610be2610bdd84610aaa565b610bc2565b610aaa565b9050919050565b6000610bf982610bcc565b9050919050565b6000610c0b82610bee565b9050919050565b610c1b81610c00565b82525050565b6000602082019050610c366000830184610c12565b92915050565b600082825260208201905092915050565b7f496e76616c6964206163636f756e742074797065000000000000000000000000600082015250565b6000610c83601483610c3c565b9150610c8e82610c4d565b602082019050919050565b60006020820190508181036000830152610cb281610c76565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610cf382610a21565b9150610cfe83610a21565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610d3757610d36610cb9565b5b828202905092915050565b7f496e76616c69642062616c616e63650000000000000000000000000000000000600082015250565b6000610d78600f83610c3c565b9150610d8382610d42565b602082019050919050565b60006020820190508181036000830152610da781610d6b565b9050919050565b600081519050610dbd81610a2b565b92915050565b600060208284031215610dd957610dd86109e6565b5b6000610de784828501610dae565b91505092915050565b7f42616c616e6365206e6f74207269676874000000000000000000000000000000600082015250565b6000610e26601183610c3c565b9150610e3182610df0565b602082019050919050565b60006020820190508181036000830152610e5581610e19565b9050919050565b6000610e6782610a21565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610e9a57610e99610cb9565b5b600182019050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610edb602083610c3c565b9150610ee682610ea5565b602082019050919050565b60006020820190508181036000830152610f0a81610ece565b9050919050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6000610f6d602e83610c3c565b9150610f7882610f11565b604082019050919050565b60006020820190508181036000830152610f9c81610f60565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610fff602683610c3c565b915061100a82610fa3565b604082019050919050565b6000602082019050818103600083015261102e81610ff2565b9050919050565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b6000611091602b83610c3c565b915061109c82611035565b604082019050919050565b600060208201905081810360008301526110c081611084565b905091905056fea2646970667358221220910c014f3b5793053a74a62ebf5dcc8f55265a0f8dcb7b0b19baea399b6ed1bd64736f6c63430008090033";

export class TTBank__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TTBank> {
    return super.deploy(overrides || {}) as Promise<TTBank>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TTBank {
    return super.attach(address) as TTBank;
  }
  connect(signer: Signer): TTBank__factory {
    return super.connect(signer) as TTBank__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TTBankInterface {
    return new utils.Interface(_abi) as TTBankInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): TTBank {
    return new Contract(address, _abi, signerOrProvider) as TTBank;
  }
}
