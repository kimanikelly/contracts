/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TTBank, TTBankInterface } from "../TTBank";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_accountType",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_balance",
        type: "uint256",
      },
    ],
    name: "openAccount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract Token",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_accountType",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "viewAccountByIndex",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "accountNumber",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "accountName",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "accountType",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
        ],
        internalType: "struct TTBank.BankDetails",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611449806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80639e38eab41161005b5780639e38eab4146100da578063c4d66de8146100f6578063f2fde38b14610112578063fc0c546a1461012e5761007d565b80635e4c5ceb14610082578063715018a6146100b25780638da5cb5b146100bc575b600080fd5b61009c60048036038101906100979190610daa565b61014c565b6040516100a99190610e9e565b60405180910390f35b6100ba61040b565b005b6100c4610493565b6040516100d19190610ec8565b60405180910390f35b6100f460048036038101906100ef9190610daa565b6104bd565b005b610110600480360381019061010b9190610f0f565b6108f0565b005b61012c60048036038101906101279190610f0f565b610a1e565b005b610136610b16565b6040516101439190610f9b565b60405180910390f35b610154610cf8565b827f436865636b696e670000000000000000000000000000000000000000000000008114806101a257507f536176696e67730000000000000000000000000000000000000000000000000081145b6101e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101d890611013565b60405180910390fd5b6101e9610cf8565b7f436865636b696e670000000000000000000000000000000000000000000000008514156102f657606a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020848154811061026257610261611033565b5b9060005260206000209060040201604051806080016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820154815250509050610400565b7f536176696e6773000000000000000000000000000000000000000000000000008514156103ff57606b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020848154811061036f5761036e611033565b5b9060005260206000209060040201604051806080016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820154815260200160038201548152505090505b5b809250505092915050565b610413610b3c565b73ffffffffffffffffffffffffffffffffffffffff16610431610493565b73ffffffffffffffffffffffffffffffffffffffff1614610487576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047e906110ae565b60405180910390fd5b6104916000610b44565b565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b817f436865636b696e6700000000000000000000000000000000000000000000000081148061050b57507f536176696e67730000000000000000000000000000000000000000000000000081145b61054a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054190611013565b60405180910390fd5b6000821161058d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105849061111a565b60405180910390fd5b606660000160008154809291906105a390611169565b919050555033606660010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082606660020181905550816066600301819055507f436865636b696e6700000000000000000000000000000000000000000000000083141561071e57606a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060669080600181540180825580915050600190039060005260206000209060040201600090919091909150600082015481600001556001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060028201548160020155600382015481600301555050610839565b7f536176696e67730000000000000000000000000000000000000000000000000083141561083857606b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060669080600181540180825580915050600190039060005260206000209060040201600090919091909150600082015481600001556001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600282015481600201556003820154816003015550505b5b606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610898939291906111c1565b602060405180830381600087803b1580156108b257600080fd5b505af11580156108c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ea9190611230565b50505050565b600060019054906101000a900460ff166109185760008054906101000a900460ff1615610921565b610920610c0a565b5b610960576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610957906112cf565b60405180910390fd5b60008060019054906101000a900460ff1615905080156109b0576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b81606560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506109f9610c1b565b8015610a1a5760008060016101000a81548160ff0219169083151502179055505b5050565b610a26610b3c565b73ffffffffffffffffffffffffffffffffffffffff16610a44610493565b73ffffffffffffffffffffffffffffffffffffffff1614610a9a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a91906110ae565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610b0a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0190611361565b60405180910390fd5b610b1381610b44565b50565b606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600033905090565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000610c1530610c74565b15905090565b600060019054906101000a900460ff16610c6a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c61906113f3565b60405180910390fd5b610c72610c97565b565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600060019054906101000a900460ff16610ce6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cdd906113f3565b60405180910390fd5b610cf6610cf1610b3c565b610b44565b565b604051806080016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008019168152602001600081525090565b600080fd5b6000819050919050565b610d5181610d3e565b8114610d5c57600080fd5b50565b600081359050610d6e81610d48565b92915050565b6000819050919050565b610d8781610d74565b8114610d9257600080fd5b50565b600081359050610da481610d7e565b92915050565b60008060408385031215610dc157610dc0610d39565b5b6000610dcf85828601610d5f565b9250506020610de085828601610d95565b9150509250929050565b610df381610d74565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e2482610df9565b9050919050565b610e3481610e19565b82525050565b610e4381610d3e565b82525050565b608082016000820151610e5f6000850182610dea565b506020820151610e726020850182610e2b565b506040820151610e856040850182610e3a565b506060820151610e986060850182610dea565b50505050565b6000608082019050610eb36000830184610e49565b92915050565b610ec281610e19565b82525050565b6000602082019050610edd6000830184610eb9565b92915050565b610eec81610e19565b8114610ef757600080fd5b50565b600081359050610f0981610ee3565b92915050565b600060208284031215610f2557610f24610d39565b5b6000610f3384828501610efa565b91505092915050565b6000819050919050565b6000610f61610f5c610f5784610df9565b610f3c565b610df9565b9050919050565b6000610f7382610f46565b9050919050565b6000610f8582610f68565b9050919050565b610f9581610f7a565b82525050565b6000602082019050610fb06000830184610f8c565b92915050565b600082825260208201905092915050565b7f545442616e6b3a20496e76616c6964206163636f756e74207479706500000000600082015250565b6000610ffd601c83610fb6565b915061100882610fc7565b602082019050919050565b6000602082019050818103600083015261102c81610ff0565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611098602083610fb6565b91506110a382611062565b602082019050919050565b600060208201905081810360008301526110c78161108b565b9050919050565b7f545442616e6b3a204465706f73697420616d6f756e7420697320300000000000600082015250565b6000611104601b83610fb6565b915061110f826110ce565b602082019050919050565b60006020820190508181036000830152611133816110f7565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061117482610d74565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156111a7576111a661113a565b5b600182019050919050565b6111bb81610d74565b82525050565b60006060820190506111d66000830186610eb9565b6111e36020830185610eb9565b6111f060408301846111b2565b949350505050565b60008115159050919050565b61120d816111f8565b811461121857600080fd5b50565b60008151905061122a81611204565b92915050565b60006020828403121561124657611245610d39565b5b60006112548482850161121b565b91505092915050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b60006112b9602e83610fb6565b91506112c48261125d565b604082019050919050565b600060208201905081810360008301526112e8816112ac565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061134b602683610fb6565b9150611356826112ef565b604082019050919050565b6000602082019050818103600083015261137a8161133e565b9050919050565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b60006113dd602b83610fb6565b91506113e882611381565b604082019050919050565b6000602082019050818103600083015261140c816113d0565b905091905056fea264697066735822122034a0325dd2906ac9d5cdf8bbf961a230b999a4cff80c6c5545f61bbdb89fa63264736f6c63430008090033";

export class TTBank__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TTBank> {
    return super.deploy(overrides || {}) as Promise<TTBank>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TTBank {
    return super.attach(address) as TTBank;
  }
  connect(signer: Signer): TTBank__factory {
    return super.connect(signer) as TTBank__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TTBankInterface {
    return new utils.Interface(_abi) as TTBankInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): TTBank {
    return new Contract(address, _abi, signerOrProvider) as TTBank;
  }
}
