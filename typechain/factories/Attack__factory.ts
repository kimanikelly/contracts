/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Attack, AttackInterface } from "../Attack";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "bankAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    stateMutability: "nonpayable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "attack",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "attackBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract Token",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "ttBank",
    outputs: [
      {
        internalType: "contract TTBank",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620011a5380380620011a5833981810160405281019062000037919062000217565b620000576200004b620000e160201b60201c565b620000e960201b60201c565b81600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506200025e565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001df82620001b2565b9050919050565b620001f181620001d2565b8114620001fd57600080fd5b50565b6000815190506200021181620001e6565b92915050565b60008060408385031215620002315762000230620001ad565b5b6000620002418582860162000200565b9250506020620002548582860162000200565b9150509250929050565b610f37806200026e6000396000f3fe608060405234801561001057600080fd5b50600436106100815760003560e01c80638cd647271161005b5780638cd647271461026b5780638da5cb5b14610289578063f2fde38b146102a7578063fc0c546a146102c357610082565b806302cdfb591461022757806364dd891a14610245578063715018a61461026157610082565b5b6100c06040518060400160405280600581526020017f48656c6c6f0000000000000000000000000000000000000000000000000000008152506102e1565b670de0b6b3a7640000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166328657aa56040518163ffffffff1660e01b815260040160206040518083038186803b15801561013157600080fd5b505afa158015610145573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101699190610a29565b1061022557600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d670de0b6b3a76400006040518263ffffffff1660e01b81526004016101d19190610a9b565b602060405180830381600087803b1580156101eb57600080fd5b505af11580156101ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102239190610aee565b505b005b61022f61037a565b60405161023c9190610b90565b60405180910390f35b61025f600480360381019061025a9190610bc0565b6103a0565b005b610269610683565b005b61027361070b565b6040516102809190610bfc565b60405180910390f35b6102916107b2565b60405161029e9190610c38565b60405180910390f35b6102c160048036038101906102bc9190610c7f565b6107db565b005b6102cb6108d3565b6040516102d89190610ccd565b60405180910390f35b610377816040516024016102f59190610d81565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506108f9565b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b815260040161041f929190610da3565b602060405180830381600087803b15801561043957600080fd5b505af115801561044d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104719190610aee565b50600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016104d193929190610dcc565b602060405180830381600087803b1580156104eb57600080fd5b505af11580156104ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105239190610aee565b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631000420d826040518263ffffffff1660e01b815260040161057f9190610bfc565b602060405180830381600087803b15801561059957600080fd5b505af11580156105ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d19190610aee565b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d826040518263ffffffff1660e01b815260040161062d9190610bfc565b602060405180830381600087803b15801561064757600080fd5b505af115801561065b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067f9190610aee565b5050565b61068b610922565b73ffffffffffffffffffffffffffffffffffffffff166106a96107b2565b73ffffffffffffffffffffffffffffffffffffffff16146106ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f690610e4f565b60405180910390fd5b610709600061092a565b565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633ff1e05b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561077557600080fd5b505afa158015610789573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ad9190610a29565b905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6107e3610922565b73ffffffffffffffffffffffffffffffffffffffff166108016107b2565b73ffffffffffffffffffffffffffffffffffffffff1614610857576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084e90610e4f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156108c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108be90610ee1565b60405180910390fd5b6108d08161092a565b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b6000819050919050565b610a06816109f3565b8114610a1157600080fd5b50565b600081519050610a23816109fd565b92915050565b600060208284031215610a3f57610a3e6109ee565b5b6000610a4d84828501610a14565b91505092915050565b6000819050919050565b6000819050919050565b6000610a85610a80610a7b84610a56565b610a60565b6109f3565b9050919050565b610a9581610a6a565b82525050565b6000602082019050610ab06000830184610a8c565b92915050565b60008115159050919050565b610acb81610ab6565b8114610ad657600080fd5b50565b600081519050610ae881610ac2565b92915050565b600060208284031215610b0457610b036109ee565b5b6000610b1284828501610ad9565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b56610b51610b4c84610b1b565b610a60565b610b1b565b9050919050565b6000610b6882610b3b565b9050919050565b6000610b7a82610b5d565b9050919050565b610b8a81610b6f565b82525050565b6000602082019050610ba56000830184610b81565b92915050565b600081359050610bba816109fd565b92915050565b600060208284031215610bd657610bd56109ee565b5b6000610be484828501610bab565b91505092915050565b610bf6816109f3565b82525050565b6000602082019050610c116000830184610bed565b92915050565b6000610c2282610b1b565b9050919050565b610c3281610c17565b82525050565b6000602082019050610c4d6000830184610c29565b92915050565b610c5c81610c17565b8114610c6757600080fd5b50565b600081359050610c7981610c53565b92915050565b600060208284031215610c9557610c946109ee565b5b6000610ca384828501610c6a565b91505092915050565b6000610cb782610b5d565b9050919050565b610cc781610cac565b82525050565b6000602082019050610ce26000830184610cbe565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610d22578082015181840152602081019050610d07565b83811115610d31576000848401525b50505050565b6000601f19601f8301169050919050565b6000610d5382610ce8565b610d5d8185610cf3565b9350610d6d818560208601610d04565b610d7681610d37565b840191505092915050565b60006020820190508181036000830152610d9b8184610d48565b905092915050565b6000604082019050610db86000830185610c29565b610dc56020830184610bed565b9392505050565b6000606082019050610de16000830186610c29565b610dee6020830185610c29565b610dfb6040830184610bed565b949350505050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610e39602083610cf3565b9150610e4482610e03565b602082019050919050565b60006020820190508181036000830152610e6881610e2c565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610ecb602683610cf3565b9150610ed682610e6f565b604082019050919050565b60006020820190508181036000830152610efa81610ebe565b905091905056fea2646970667358221220ee68fd847f3bb5dbda5b354c011eec5bdb79d6651c5c064e183464e00030576864736f6c63430008090033";

export class Attack__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    bankAddress: string,
    tokenAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Attack> {
    return super.deploy(
      bankAddress,
      tokenAddress,
      overrides || {}
    ) as Promise<Attack>;
  }
  getDeployTransaction(
    bankAddress: string,
    tokenAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      bankAddress,
      tokenAddress,
      overrides || {}
    );
  }
  attach(address: string): Attack {
    return super.attach(address) as Attack;
  }
  connect(signer: Signer): Attack__factory {
    return super.connect(signer) as Attack__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AttackInterface {
    return new utils.Interface(_abi) as AttackInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Attack {
    return new Contract(address, _abi, signerOrProvider) as Attack;
  }
}
