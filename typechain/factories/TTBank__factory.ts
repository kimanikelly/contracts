/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TTBank, TTBankInterface } from "../TTBank";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_accountType",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_balance",
        type: "uint256",
      },
    ],
    name: "openAccount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "savingsAccounts",
    outputs: [
      {
        internalType: "uint256",
        name: "accountNumber",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "accountName",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "accountType",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract Token",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "viewAccount",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "accountNumber",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "accountName",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "accountType",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
        ],
        internalType: "struct TTBank.BankDetails",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061135c806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063dcc15b621161005b578063dcc15b62146100ed578063f2fde38b14610120578063f8e88c911461013c578063fc0c546a1461016c57610088565b8063715018a61461008d5780638da5cb5b146100975780639e38eab4146100b5578063c4d66de8146100d1575b600080fd5b61009561018a565b005b61009f610212565b6040516100ac9190610c0c565b60405180910390f35b6100cf60048036038101906100ca9190610c98565b61023c565b005b6100eb60048036038101906100e69190610d04565b610645565b005b61010760048036038101906101029190610d04565b610773565b6040516101179493929190610d4f565b60405180910390f35b61013a60048036038101906101359190610d04565b6107c3565b005b61015660048036038101906101519190610d94565b6108bb565b6040516101639190610e43565b60405180910390f35b6101746109a8565b6040516101819190610ebd565b60405180910390f35b6101926109ce565b73ffffffffffffffffffffffffffffffffffffffff166101b0610212565b73ffffffffffffffffffffffffffffffffffffffff1614610206576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101fd90610f35565b60405180910390fd5b61021060006109d6565b565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f436865636b696e6700000000000000000000000000000000000000000000000082148061028957507f536176696e67730000000000000000000000000000000000000000000000000082145b6102c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102bf90610fa1565b60405180910390fd5b6000811161030b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103029061100d565b60405180910390fd5b606660000160008154809291906103219061105c565b919050555033606660010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081606660020181905550806066600301819055507f436865636b696e6700000000000000000000000000000000000000000000000082141561049c57606a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060669080600181540180825580915050600190039060005260206000209060040201600090919091909150600082015481600001556001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506002820154816002015560038201548160030155505061058f565b7f536176696e67730000000000000000000000000000000000000000000000000082141561058e576066606b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015481600001556001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060028201548160020155600382015481600301559050505b5b606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016105ee939291906110a5565b602060405180830381600087803b15801561060857600080fd5b505af115801561061c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106409190611114565b505050565b600060019054906101000a900460ff1661066d5760008054906101000a900460ff1615610676565b610675610a9c565b5b6106b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ac906111b3565b60405180910390fd5b60008060019054906101000a900460ff161590508015610705576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b81606560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061074e610aad565b801561076f5760008060016101000a81548160ff0219169083151502179055505b5050565b606b6020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030154905084565b6107cb6109ce565b73ffffffffffffffffffffffffffffffffffffffff166107e9610212565b73ffffffffffffffffffffffffffffffffffffffff161461083f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083690610f35565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156108af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a690611245565b60405180910390fd5b6108b8816109d6565b50565b6108c3610b8a565b606a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061091457610913611265565b5b9060005260206000209060040201604051806080016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820154815250509050919050565b606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600033905090565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000610aa730610b06565b15905090565b600060019054906101000a900460ff16610afc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610af390611306565b60405180910390fd5b610b04610b29565b565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600060019054906101000a900460ff16610b78576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b6f90611306565b60405180910390fd5b610b88610b836109ce565b6109d6565b565b604051806080016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008019168152602001600081525090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610bf682610bcb565b9050919050565b610c0681610beb565b82525050565b6000602082019050610c216000830184610bfd565b92915050565b600080fd5b6000819050919050565b610c3f81610c2c565b8114610c4a57600080fd5b50565b600081359050610c5c81610c36565b92915050565b6000819050919050565b610c7581610c62565b8114610c8057600080fd5b50565b600081359050610c9281610c6c565b92915050565b60008060408385031215610caf57610cae610c27565b5b6000610cbd85828601610c4d565b9250506020610cce85828601610c83565b9150509250929050565b610ce181610beb565b8114610cec57600080fd5b50565b600081359050610cfe81610cd8565b92915050565b600060208284031215610d1a57610d19610c27565b5b6000610d2884828501610cef565b91505092915050565b610d3a81610c62565b82525050565b610d4981610c2c565b82525050565b6000608082019050610d646000830187610d31565b610d716020830186610bfd565b610d7e6040830185610d40565b610d8b6060830184610d31565b95945050505050565b600060208284031215610daa57610da9610c27565b5b6000610db884828501610c83565b91505092915050565b610dca81610c62565b82525050565b610dd981610beb565b82525050565b610de881610c2c565b82525050565b608082016000820151610e046000850182610dc1565b506020820151610e176020850182610dd0565b506040820151610e2a6040850182610ddf565b506060820151610e3d6060850182610dc1565b50505050565b6000608082019050610e586000830184610dee565b92915050565b6000819050919050565b6000610e83610e7e610e7984610bcb565b610e5e565b610bcb565b9050919050565b6000610e9582610e68565b9050919050565b6000610ea782610e8a565b9050919050565b610eb781610e9c565b82525050565b6000602082019050610ed26000830184610eae565b92915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610f1f602083610ed8565b9150610f2a82610ee9565b602082019050919050565b60006020820190508181036000830152610f4e81610f12565b9050919050565b7f545442616e6b3a20496e76616c6964206163636f756e74207479706500000000600082015250565b6000610f8b601c83610ed8565b9150610f9682610f55565b602082019050919050565b60006020820190508181036000830152610fba81610f7e565b9050919050565b7f545442616e6b3a204465706f73697420616d6f756e7420697320300000000000600082015250565b6000610ff7601b83610ed8565b915061100282610fc1565b602082019050919050565b6000602082019050818103600083015261102681610fea565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061106782610c62565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561109a5761109961102d565b5b600182019050919050565b60006060820190506110ba6000830186610bfd565b6110c76020830185610bfd565b6110d46040830184610d31565b949350505050565b60008115159050919050565b6110f1816110dc565b81146110fc57600080fd5b50565b60008151905061110e816110e8565b92915050565b60006020828403121561112a57611129610c27565b5b6000611138848285016110ff565b91505092915050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b600061119d602e83610ed8565b91506111a882611141565b604082019050919050565b600060208201905081810360008301526111cc81611190565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061122f602683610ed8565b915061123a826111d3565b604082019050919050565b6000602082019050818103600083015261125e81611222565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b60006112f0602b83610ed8565b91506112fb82611294565b604082019050919050565b6000602082019050818103600083015261131f816112e3565b905091905056fea2646970667358221220ac7444ae112e58687e764a28a6e23273005ba9a342cfc9f1a08321f6ac6929de64736f6c63430008090033";

export class TTBank__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TTBank> {
    return super.deploy(overrides || {}) as Promise<TTBank>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TTBank {
    return super.attach(address) as TTBank;
  }
  connect(signer: Signer): TTBank__factory {
    return super.connect(signer) as TTBank__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TTBankInterface {
    return new utils.Interface(_abi) as TTBankInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): TTBank {
    return new Contract(address, _abi, signerOrProvider) as TTBank;
  }
}
