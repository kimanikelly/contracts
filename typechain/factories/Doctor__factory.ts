/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Doctor, DoctorInterface } from "../Doctor";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "cid",
        type: "bytes32",
      },
    ],
    name: "addDoctor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "healthRecordAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_healthRecordAddress",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610a3e806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063597bef8e14610067578063715018a6146100855780638da5cb5b1461008f578063c4d66de8146100ad578063f2fde38b146100c9578063f53cd955146100e5575b600080fd5b61006f610101565b60405161007c9190610662565b60405180910390f35b61008d610127565b005b61009761013b565b6040516100a49190610662565b60405180910390f35b6100c760048036038101906100c291906106ae565b610165565b005b6100e360048036038101906100de91906106ae565b6102e5565b005b6100ff60048036038101906100fa9190610711565b610368565b005b606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61012f6103f8565b6101396000610476565b565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060019054906101000a900460ff161590508080156101965750600160008054906101000a900460ff1660ff16105b806101c357506101a53061053c565b1580156101c25750600160008054906101000a900460ff1660ff16145b5b610202576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101f9906107c1565b60405180910390fd5b60016000806101000a81548160ff021916908360ff160217905550801561023f576001600060016101000a81548160ff0219169083151502179055505b81606560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061028861055f565b80156102e15760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249860016040516102d89190610833565b60405180910390a15b5050565b6102ed6103f8565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361035c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610353906108c0565b60405180910390fd5b61036581610476565b50565b606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f53cd955826040518263ffffffff1660e01b81526004016103c391906108ef565b600060405180830381600087803b1580156103dd57600080fd5b505af11580156103f1573d6000803e3d6000fd5b5050505050565b6104006105b8565b73ffffffffffffffffffffffffffffffffffffffff1661041e61013b565b73ffffffffffffffffffffffffffffffffffffffff1614610474576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046b90610956565b60405180910390fd5b565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600060019054906101000a900460ff166105ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a5906109e8565b60405180910390fd5b6105b66105c0565b565b600033905090565b600060019054906101000a900460ff1661060f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610606906109e8565b60405180910390fd5b61061f61061a6105b8565b610476565b565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061064c82610621565b9050919050565b61065c81610641565b82525050565b60006020820190506106776000830184610653565b92915050565b600080fd5b61068b81610641565b811461069657600080fd5b50565b6000813590506106a881610682565b92915050565b6000602082840312156106c4576106c361067d565b5b60006106d284828501610699565b91505092915050565b6000819050919050565b6106ee816106db565b81146106f957600080fd5b50565b60008135905061070b816106e5565b92915050565b6000602082840312156107275761072661067d565b5b6000610735848285016106fc565b91505092915050565b600082825260208201905092915050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b60006107ab602e8361073e565b91506107b68261074f565b604082019050919050565b600060208201905081810360008301526107da8161079e565b9050919050565b6000819050919050565b600060ff82169050919050565b6000819050919050565b600061081d610818610813846107e1565b6107f8565b6107eb565b9050919050565b61082d81610802565b82525050565b60006020820190506108486000830184610824565b92915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006108aa60268361073e565b91506108b58261084e565b604082019050919050565b600060208201905081810360008301526108d98161089d565b9050919050565b6108e9816106db565b82525050565b600060208201905061090460008301846108e0565b92915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061094060208361073e565b915061094b8261090a565b602082019050919050565b6000602082019050818103600083015261096f81610933565b9050919050565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b60006109d2602b8361073e565b91506109dd82610976565b604082019050919050565b60006020820190508181036000830152610a01816109c5565b905091905056fea26469706673582212202ffb5e21109aef7745d971557c6f9ed6a7865c338a69c72d4d0eeb0b8adcc2b064736f6c63430008130033";

export class Doctor__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Doctor> {
    return super.deploy(overrides || {}) as Promise<Doctor>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Doctor {
    return super.attach(address) as Doctor;
  }
  connect(signer: Signer): Doctor__factory {
    return super.connect(signer) as Doctor__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DoctorInterface {
    return new utils.Interface(_abi) as DoctorInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Doctor {
    return new Contract(address, _abi, signerOrProvider) as Doctor;
  }
}
