/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { HealthRecord, HealthRecordInterface } from "../HealthRecord";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "cid",
        type: "bytes32",
      },
    ],
    name: "addDoctor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "doctorAddress",
        type: "address",
      },
    ],
    name: "isDoctorVerified",
    outputs: [
      {
        internalType: "bool",
        name: "doctorStatus",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610975806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80630b13acdf14610067578063715018a6146100975780638129fc1c146100a15780638da5cb5b146100ab578063f2fde38b146100c9578063f53cd955146100e5575b600080fd5b610081600480360381019061007c91906105af565b610101565b60405161008e91906105f7565b60405180910390f35b61009f610121565b005b6100a9610135565b005b6100b3610273565b6040516100c09190610621565b60405180910390f35b6100e360048036038101906100de91906105af565b61029d565b005b6100ff60048036038101906100fa9190610672565b610320565b005b60656020528060005260406000206000915054906101000a900460ff1681565b610129610323565b61013360006103a1565b565b60008060019054906101000a900460ff161590508080156101665750600160008054906101000a900460ff1660ff16105b80610193575061017530610467565b1580156101925750600160008054906101000a900460ff1660ff16145b5b6101d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101c990610722565b60405180910390fd5b60016000806101000a81548160ff021916908360ff160217905550801561020f576001600060016101000a81548160ff0219169083151502179055505b61021761048a565b80156102705760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249860016040516102679190610794565b60405180910390a15b50565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6102a5610323565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610314576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030b90610821565b60405180910390fd5b61031d816103a1565b50565b50565b61032b6104e3565b73ffffffffffffffffffffffffffffffffffffffff16610349610273565b73ffffffffffffffffffffffffffffffffffffffff161461039f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103969061088d565b60405180910390fd5b565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600060019054906101000a900460ff166104d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d09061091f565b60405180910390fd5b6104e16104eb565b565b600033905090565b600060019054906101000a900460ff1661053a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105319061091f565b60405180910390fd5b61054a6105456104e3565b6103a1565b565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061057c82610551565b9050919050565b61058c81610571565b811461059757600080fd5b50565b6000813590506105a981610583565b92915050565b6000602082840312156105c5576105c461054c565b5b60006105d38482850161059a565b91505092915050565b60008115159050919050565b6105f1816105dc565b82525050565b600060208201905061060c60008301846105e8565b92915050565b61061b81610571565b82525050565b60006020820190506106366000830184610612565b92915050565b6000819050919050565b61064f8161063c565b811461065a57600080fd5b50565b60008135905061066c81610646565b92915050565b6000602082840312156106885761068761054c565b5b60006106968482850161065d565b91505092915050565b600082825260208201905092915050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b600061070c602e8361069f565b9150610717826106b0565b604082019050919050565b6000602082019050818103600083015261073b816106ff565b9050919050565b6000819050919050565b600060ff82169050919050565b6000819050919050565b600061077e61077961077484610742565b610759565b61074c565b9050919050565b61078e81610763565b82525050565b60006020820190506107a96000830184610785565b92915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061080b60268361069f565b9150610816826107af565b604082019050919050565b6000602082019050818103600083015261083a816107fe565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061087760208361069f565b915061088282610841565b602082019050919050565b600060208201905081810360008301526108a68161086a565b9050919050565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b6000610909602b8361069f565b9150610914826108ad565b604082019050919050565b60006020820190508181036000830152610938816108fc565b905091905056fea26469706673582212202936316b20cf9d29e4e8a6b8fb1cee28bb954fa36e60db0ec3b3b23be5b683c364736f6c63430008130033";

export class HealthRecord__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<HealthRecord> {
    return super.deploy(overrides || {}) as Promise<HealthRecord>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): HealthRecord {
    return super.attach(address) as HealthRecord;
  }
  connect(signer: Signer): HealthRecord__factory {
    return super.connect(signer) as HealthRecord__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HealthRecordInterface {
    return new utils.Interface(_abi) as HealthRecordInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HealthRecord {
    return new Contract(address, _abi, signerOrProvider) as HealthRecord;
  }
}
