/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Doctor, DoctorInterface } from "../Doctor";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "_healthRecord",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "cid",
        type: "bytes32",
      },
    ],
    name: "addDoctor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "healthRecordAddress",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610a22806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063715018a6146100675780638da5cb5b14610071578063c4d66de81461008f578063cee5a362146100ab578063f2fde38b146100c9578063f53cd955146100e5575b600080fd5b61006f610101565b005b610079610115565b6040516100869190610646565b60405180910390f35b6100a960048036038101906100a49190610692565b61013f565b005b6100b36102a3565b6040516100c09190610646565b60405180910390f35b6100e360048036038101906100de9190610692565b6102c9565b005b6100ff60048036038101906100fa91906106f5565b61034c565b005b6101096103dc565b610113600061045a565b565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060019054906101000a900460ff161590508080156101705750600160008054906101000a900460ff1660ff16105b8061019d575061017f30610520565b15801561019c5750600160008054906101000a900460ff1660ff16145b5b6101dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101d3906107a5565b60405180910390fd5b60016000806101000a81548160ff021916908360ff1602179055508015610219576001600060016101000a81548160ff0219169083151502179055505b610221610543565b606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169150801561029f5760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249860016040516102969190610817565b60405180910390a15b5050565b606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6102d16103dc565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610340576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610337906108a4565b60405180910390fd5b6103498161045a565b50565b606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f53cd955826040518263ffffffff1660e01b81526004016103a791906108d3565b600060405180830381600087803b1580156103c157600080fd5b505af11580156103d5573d6000803e3d6000fd5b5050505050565b6103e461059c565b73ffffffffffffffffffffffffffffffffffffffff16610402610115565b73ffffffffffffffffffffffffffffffffffffffff1614610458576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044f9061093a565b60405180910390fd5b565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600060019054906101000a900460ff16610592576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610589906109cc565b60405180910390fd5b61059a6105a4565b565b600033905090565b600060019054906101000a900460ff166105f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ea906109cc565b60405180910390fd5b6106036105fe61059c565b61045a565b565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061063082610605565b9050919050565b61064081610625565b82525050565b600060208201905061065b6000830184610637565b92915050565b600080fd5b61066f81610625565b811461067a57600080fd5b50565b60008135905061068c81610666565b92915050565b6000602082840312156106a8576106a7610661565b5b60006106b68482850161067d565b91505092915050565b6000819050919050565b6106d2816106bf565b81146106dd57600080fd5b50565b6000813590506106ef816106c9565b92915050565b60006020828403121561070b5761070a610661565b5b6000610719848285016106e0565b91505092915050565b600082825260208201905092915050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b600061078f602e83610722565b915061079a82610733565b604082019050919050565b600060208201905081810360008301526107be81610782565b9050919050565b6000819050919050565b600060ff82169050919050565b6000819050919050565b60006108016107fc6107f7846107c5565b6107dc565b6107cf565b9050919050565b610811816107e6565b82525050565b600060208201905061082c6000830184610808565b92915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061088e602683610722565b915061089982610832565b604082019050919050565b600060208201905081810360008301526108bd81610881565b9050919050565b6108cd816106bf565b82525050565b60006020820190506108e860008301846108c4565b92915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610924602083610722565b915061092f826108ee565b602082019050919050565b6000602082019050818103600083015261095381610917565b9050919050565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b60006109b6602b83610722565b91506109c18261095a565b604082019050919050565b600060208201905081810360008301526109e5816109a9565b905091905056fea2646970667358221220abee12312079b8faa5bd08a92486b653042629ca367802fabee612bd373dd26064736f6c63430008130033";

export class Doctor__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Doctor> {
    return super.deploy(overrides || {}) as Promise<Doctor>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Doctor {
    return super.attach(address) as Doctor;
  }
  connect(signer: Signer): Doctor__factory {
    return super.connect(signer) as Doctor__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DoctorInterface {
    return new utils.Interface(_abi) as DoctorInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Doctor {
    return new Contract(address, _abi, signerOrProvider) as Doctor;
  }
}
