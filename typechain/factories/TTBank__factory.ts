/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TTBank, TTBankInterface } from "../TTBank";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_accountType",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_balance",
        type: "uint256",
      },
    ],
    name: "openAccount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "savingsAccounts",
    outputs: [
      {
        internalType: "uint256",
        name: "accountNumber",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "accountName",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "accountType",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract Token",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "viewCheckingByIndex",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "accountNumber",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "accountName",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "accountType",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
        ],
        internalType: "struct TTBank.BankDetails",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061135c806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063c4d66de81161005b578063c4d66de814610101578063dcc15b621461011d578063f2fde38b14610150578063fc0c546a1461016c57610088565b80635a76ad0c1461008d578063715018a6146100bd5780638da5cb5b146100c75780639e38eab4146100e5575b600080fd5b6100a760048036038101906100a29190610c06565b61018a565b6040516100b49190610cf1565b60405180910390f35b6100c5610277565b005b6100cf6102ff565b6040516100dc9190610d1b565b60405180910390f35b6100ff60048036038101906100fa9190610d62565b610329565b005b61011b60048036038101906101169190610dce565b610732565b005b61013760048036038101906101329190610dce565b610860565b6040516101479493929190610e19565b60405180910390f35b61016a60048036038101906101659190610dce565b6108b0565b005b6101746109a8565b6040516101819190610ebd565b60405180910390f35b610192610b8a565b606a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106101e3576101e2610ed8565b5b9060005260206000209060040201604051806080016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820154815250509050919050565b61027f6109ce565b73ffffffffffffffffffffffffffffffffffffffff1661029d6102ff565b73ffffffffffffffffffffffffffffffffffffffff16146102f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ea90610f64565b60405180910390fd5b6102fd60006109d6565b565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f436865636b696e6700000000000000000000000000000000000000000000000082148061037657507f536176696e67730000000000000000000000000000000000000000000000000082145b6103b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ac90610fd0565b60405180910390fd5b600081116103f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ef9061103c565b60405180910390fd5b6066600001600081548092919061040e9061108b565b919050555033606660010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081606660020181905550806066600301819055507f436865636b696e6700000000000000000000000000000000000000000000000082141561058957606a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060669080600181540180825580915050600190039060005260206000209060040201600090919091909150600082015481600001556001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506002820154816002015560038201548160030155505061067c565b7f536176696e67730000000000000000000000000000000000000000000000000082141561067b576066606c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015481600001556001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060028201548160020155600382015481600301559050505b5b606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016106db939291906110d4565b602060405180830381600087803b1580156106f557600080fd5b505af1158015610709573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072d9190611143565b505050565b600060019054906101000a900460ff1661075a5760008054906101000a900460ff1615610763565b610762610a9c565b5b6107a2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610799906111e2565b60405180910390fd5b60008060019054906101000a900460ff1615905080156107f2576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b81606560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061083b610aad565b801561085c5760008060016101000a81548160ff0219169083151502179055505b5050565b606c6020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030154905084565b6108b86109ce565b73ffffffffffffffffffffffffffffffffffffffff166108d66102ff565b73ffffffffffffffffffffffffffffffffffffffff161461092c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092390610f64565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561099c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099390611274565b60405180910390fd5b6109a5816109d6565b50565b606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600033905090565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000610aa730610b06565b15905090565b600060019054906101000a900460ff16610afc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610af390611306565b60405180910390fd5b610b04610b29565b565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600060019054906101000a900460ff16610b78576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b6f90611306565b60405180910390fd5b610b88610b836109ce565b6109d6565b565b604051806080016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008019168152602001600081525090565b600080fd5b6000819050919050565b610be381610bd0565b8114610bee57600080fd5b50565b600081359050610c0081610bda565b92915050565b600060208284031215610c1c57610c1b610bcb565b5b6000610c2a84828501610bf1565b91505092915050565b610c3c81610bd0565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610c6d82610c42565b9050919050565b610c7d81610c62565b82525050565b6000819050919050565b610c9681610c83565b82525050565b608082016000820151610cb26000850182610c33565b506020820151610cc56020850182610c74565b506040820151610cd86040850182610c8d565b506060820151610ceb6060850182610c33565b50505050565b6000608082019050610d066000830184610c9c565b92915050565b610d1581610c62565b82525050565b6000602082019050610d306000830184610d0c565b92915050565b610d3f81610c83565b8114610d4a57600080fd5b50565b600081359050610d5c81610d36565b92915050565b60008060408385031215610d7957610d78610bcb565b5b6000610d8785828601610d4d565b9250506020610d9885828601610bf1565b9150509250929050565b610dab81610c62565b8114610db657600080fd5b50565b600081359050610dc881610da2565b92915050565b600060208284031215610de457610de3610bcb565b5b6000610df284828501610db9565b91505092915050565b610e0481610bd0565b82525050565b610e1381610c83565b82525050565b6000608082019050610e2e6000830187610dfb565b610e3b6020830186610d0c565b610e486040830185610e0a565b610e556060830184610dfb565b95945050505050565b6000819050919050565b6000610e83610e7e610e7984610c42565b610e5e565b610c42565b9050919050565b6000610e9582610e68565b9050919050565b6000610ea782610e8a565b9050919050565b610eb781610e9c565b82525050565b6000602082019050610ed26000830184610eae565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610f4e602083610f07565b9150610f5982610f18565b602082019050919050565b60006020820190508181036000830152610f7d81610f41565b9050919050565b7f545442616e6b3a20496e76616c6964206163636f756e74207479706500000000600082015250565b6000610fba601c83610f07565b9150610fc582610f84565b602082019050919050565b60006020820190508181036000830152610fe981610fad565b9050919050565b7f545442616e6b3a204465706f73697420616d6f756e7420697320300000000000600082015250565b6000611026601b83610f07565b915061103182610ff0565b602082019050919050565b6000602082019050818103600083015261105581611019565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061109682610bd0565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156110c9576110c861105c565b5b600182019050919050565b60006060820190506110e96000830186610d0c565b6110f66020830185610d0c565b6111036040830184610dfb565b949350505050565b60008115159050919050565b6111208161110b565b811461112b57600080fd5b50565b60008151905061113d81611117565b92915050565b60006020828403121561115957611158610bcb565b5b60006111678482850161112e565b91505092915050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b60006111cc602e83610f07565b91506111d782611170565b604082019050919050565b600060208201905081810360008301526111fb816111bf565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061125e602683610f07565b915061126982611202565b604082019050919050565b6000602082019050818103600083015261128d81611251565b9050919050565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b60006112f0602b83610f07565b91506112fb82611294565b604082019050919050565b6000602082019050818103600083015261131f816112e3565b905091905056fea2646970667358221220a19ca7e854b0288e79d840a02b62776e87a0f1050b3047ec4d4ce352be3a785964736f6c63430008090033";

export class TTBank__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TTBank> {
    return super.deploy(overrides || {}) as Promise<TTBank>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TTBank {
    return super.attach(address) as TTBank;
  }
  connect(signer: Signer): TTBank__factory {
    return super.connect(signer) as TTBank__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TTBankInterface {
    return new utils.Interface(_abi) as TTBankInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): TTBank {
    return new Contract(address, _abi, signerOrProvider) as TTBank;
  }
}
